version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - tp-backend-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - tp-backend-network

  kafka-ui:
    image: tchiotludo/akhq
    container_name: kafka-ui
    ports:
      - "8088:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            local:
              properties:
                bootstrap.servers: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - tp-backend-network

  api-agencia:
    build:
      context: ./apiAgencia
    container_name: api-agencia
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./agencia-para-reportes.db:/app/agencia-para-reportes.db
    depends_on:
      - kafka
    networks:
      - tp-backend-network

  api-notificaciones:
    build:
      context: ./notificaciones
    container_name: api-notificaciones
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./agencia-para-reportes.db:/app/agencia-para-reportes.db
    depends_on:
      - kafka
    networks:
      - tp-backend-network

  gateway:
    build:
      context: ./gateway
    container_name: gateway
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - api-agencia
      - api-notificaciones
    networks:
      - tp-backend-network

networks:
  tp-backend-network:
    driver: bridge
