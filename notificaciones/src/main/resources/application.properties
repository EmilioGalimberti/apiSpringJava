spring.application.name=API Notificaciones - Agencia
server.servlet.context-path=/
server.port=8070

# Configuracion de la base de datos SQLite
spring.datasource.url=jdbc:sqlite:/agencia-para-reportes.db
spring.datasource.driver-class-name=org.sqlite.JDBC

# Configuracion de JPA/Hibernate
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto=none
spring.datasource.initialization-mode=always
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:DDL.sql

# Configuracion de Kafka
# Kafka consumer
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=notificaciones-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.tpi.notificaciones.dtos.PosicionDto
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# spring.kafka.consumer.value-deserializer=com.tpi.notificaciones.service.PosicionDtoDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.dtos  # <- Usá el paquete real donde está PosicionDto
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuracion de Twilio API
twilio.account.sid=
twilio.auth.token=
twilio.phone.from=
tpi-agencia.microservicio-notificaciones.recipients=+54

# Swagger Docs
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

